{"version":3,"sources":["redux/Contact/contact-action.js","redux/Contact/contact-operation.js","components/ContactForm/ContactForm.js","redux/Filter/filter-action.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/Contact/contact-reducer.js","redux/Filter/filter-reducer.js","redux/store.js","index.js"],"names":["getContactRequest","createAction","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","require","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","itemsт","dispatch","useDispatch","handleChange","e","currentTarget","value","className","onSubmit","preventDefault","find","contact","toLowerCase","alert","phone","a","newContact","post","addContact","data","console","log","asyncAddContact","placeholder","onChange","type","pattern","title","required","onFilter","Filter","filter","actions","target","ContactList","items","isLoading","visibleContacts","includes","useEffect","get","then","response","catch","error","map","onClick","id","delete","App","createReducer","payload","_","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb8636e.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactRequest = createAction(\"contacts/getContactsRequest\");\r\nexport const getContactSuccess = createAction(\"contacts/getContactsSuccess\");\r\nexport const getContactError = createAction(\"addContacts/getContactsError\");\r\n// ADD\r\nexport const addContactRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactsError\");\r\n// DELETE\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactsError\");\r\n","import {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n} from \"./contact-action\";\r\nconst axios = require(\"axios\");\r\n\r\nexport const asyncGetContact = () => async (dispatch) => {\r\n  dispatch(getContactRequest());\r\n  axios\r\n    .get(\"https://61bc594cd8542f00178246b9.mockapi.io/contacts/contacts\")\r\n    .then((response) => dispatch(getContactSuccess(response.data)))\r\n    .catch((error) => dispatch(getContactError(error)));\r\n};\r\nexport const asyncAddContact = (name, phone) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  const newContact = { name, phone };\r\n  try {\r\n    const addContact = await axios.post(\r\n      \"https://61bc594cd8542f00178246b9.mockapi.io/contacts/contacts\",\r\n      newContact\r\n    );\r\n    dispatch(addContactSuccess(addContact.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\nexport const asyncDeleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest);\r\n  try {\r\n    const deleteContact = await axios.delete(\r\n      `https://61bc594cd8542f00178246b9.mockapi.io/contacts/contacts/${id}`\r\n    );\r\n    const newContact = await axios.get(\r\n      \"https://61bc594cd8542f00178246b9.mockapi.io/contacts/contacts\"\r\n    );\r\n    dispatch(deleteContactSuccess(newContact.data));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./ContactForm.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { asyncAddContact } from \"../../redux/Contact/contact-operation\";\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector((state) => state.itemsт);\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      setNumber(\"\");\n      setName(\"\");\n      return;\n    }\n    dispatch(asyncAddContact(name, number));\n    setNumber(\"\");\n    setName(\"\");\n  };\n  return (\n    <form className=\"contactForm\" onSubmit={handleSubmit}>\n      <label className=\"form__label\">\n        Name\n        <input\n          placeholder=\"Введите имя\"\n          className=\"form__input\"\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <br />\n      <label className=\"form__label\">\n        Number\n        <input\n          placeholder=\"Введите номер\"\n          className=\"form__input\"\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <br />\n      <button className=\"form__button\" type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n","import { createAction } from \"@reduxjs/toolkit\";\r\nexport const onFilter = createAction(\"filter/add\");\r\n","import propTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/Filter/filter-action\";\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  const handleFilter = (e) => {\n    dispatch(actions.onFilter(e.target.value));\n  };\n  return (\n    <label>\n      Find contacts by name\n      <input\n        onChange={handleFilter}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n","import \"./ContactList.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  asyncDeleteContact,\n  asyncGetContact,\n} from \"../../redux/Contact/contact-operation\";\nimport { useEffect } from \"react\";\n\nexport default function ContactList() {\n  const contacts = useSelector((state) => state.items);\n  const isLoading = useSelector((state) => state.isLoading);\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  let visibleContacts = [];\n  if (contacts) {\n    visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  useEffect(() => {\n    dispatch(asyncGetContact());\n  }, [dispatch]);\n  return (\n    <>\n      {!isLoading && <h2>Loading</h2>}\n      <ul className=\"contactList\">\n        {visibleContacts &&\n          visibleContacts.map((contact) => {\n            return (\n              <li className=\"contactItem\" key={contact.id}>\n                <div className=\"contactBlock\">\n                  <span>{contact.name}</span>\n                  <span className=\"nubmer\">{contact.phone}</span>\n                </div>\n\n                <button\n                  className=\"deleteBotton\"\n                  onClick={() => {\n                    dispatch(asyncDeleteContact(contact.id));\n                  }}\n                  type=\"button\"\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n}\n","import ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter/\";\nimport ContactList from \"./components/ContactList/\";\n\n// const useContactsLocalStorage = (key) => {\n//   console.log(window.localStorage.getItem(key));\n//   const [state, setState] = useState(() => {\n//     return JSON.parse(window.localStorage.getItem(key)) ?? [];\n//   });\n//   useEffect(() => {\n//     localStorage.setItem(key, JSON.stringify(state));\n//   }, [key, state]);\n//   return [state, setState];\n// };\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n} from \"./contact-action\";\r\n\r\nconst ContactState = null;\r\n\r\nexport const contacts = createReducer(ContactState, {\r\n  [getContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => payload,\r\n});\r\nexport const isLoading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactError]: () => false,\r\n  [getContactRequest]: () => true,\r\n  [getContactError]: () => false,\r\n});\r\nexport const error = createReducer(null, {\r\n  [addContactError]: (_, payload) => `AddContactError: ${payload}`,\r\n  [deleteContactError]: (_, payload) => `deleteContactError: ${payload}`,\r\n  [getContactError]: (_, payload) => `getContactError: ${payload}`,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { onFilter } from \"./filter-action\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [onFilter]: (state, { payload }) => payload,\r\n});\r\nexport default filter;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contacts, error, isLoading } from \"./Contact/contact-reducer\";\r\nimport filter from \"./Filter/filter-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contacts,\r\n  isLoading,\r\n  error,\r\n  filter: filter,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}